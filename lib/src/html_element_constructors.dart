import 'dart:html';

import 'package:wupper/src/widget.dart';

class ElementWidget extends Widget {
  final Map<String, String>? attributes;
  final List<Widget>? children;
  final Iterable<String>? classes;
  final Map<String, String>? dataset;
  final String? innerHtml;
  final String? innerText;
  final int? scrollLeft;
  final int? scrollTop;
  final String? contentEditable;
  final String? dir;
  final bool? draggable;
  final bool? hidden;
  final bool? inert;
  final String? inputMode;
  final String? lang;
  final bool? spellcheck;
  final int? tabIndex;
  final String? title;
  final bool? translate;
  final String? className;
  final String? id;
  final String? slot;
  final Iterable<Node>? nodes;
  final String? text;

  final void Function(Event)? onAbort;
  final void Function(Event)? onBeforeCopy;
  final void Function(Event)? onBeforeCut;
  final void Function(Event)? onBeforePaste;
  final void Function(Event)? onBlur;
  final void Function(Event)? onCanPlay;
  final void Function(Event)? onCanPlayThrough;
  final void Function(Event)? onChange;
  final void Function(MouseEvent)? onClick;
  final void Function(MouseEvent)? onContextMenu;
  final void Function(ClipboardEvent)? onCopy;
  final void Function(ClipboardEvent)? onCut;
  final void Function(Event)? onDoubleClick;
  final void Function(MouseEvent)? onDrag;
  final void Function(MouseEvent)? onDragEnd;
  final void Function(MouseEvent)? onDragEnter;
  final void Function(MouseEvent)? onDragLeave;
  final void Function(MouseEvent)? onDragOver;
  final void Function(MouseEvent)? onDragStart;
  final void Function(MouseEvent)? onDrop;
  final void Function(Event)? onDurationChange;
  final void Function(Event)? onEmptied;
  final void Function(Event)? onEnded;
  final void Function(Event)? onError;
  final void Function(Event)? onFocus;
  final void Function(Event)? onInput;
  final void Function(Event)? onInvalid;
  final void Function(KeyboardEvent)? onKeyDown;
  final void Function(KeyboardEvent)? onKeyPress;
  final void Function(KeyboardEvent)? onKeyUp;
  final void Function(Event)? onLoad;
  final void Function(Event)? onLoadedData;
  final void Function(Event)? onLoadedMetadata;
  final void Function(MouseEvent)? onMouseDown;
  final void Function(MouseEvent)? onMouseEnter;
  final void Function(MouseEvent)? onMouseLeave;
  final void Function(MouseEvent)? onMouseMove;
  final void Function(MouseEvent)? onMouseOut;
  final void Function(MouseEvent)? onMouseOver;
  final void Function(MouseEvent)? onMouseUp;
  final void Function(WheelEvent)? onMouseWheel;
  final void Function(ClipboardEvent)? onPaste;
  final void Function(Event)? onPause;
  final void Function(Event)? onPlay;
  final void Function(Event)? onPlaying;
  final void Function(Event)? onRateChange;
  final void Function(Event)? onReset;
  final void Function(Event)? onResize;
  final void Function(Event)? onScroll;
  final void Function(Event)? onSearch;
  final void Function(Event)? onSeeked;
  final void Function(Event)? onSeeking;
  final void Function(Event)? onSelect;
  final void Function(Event)? onSelectStart;
  final void Function(Event)? onStalled;
  final void Function(Event)? onSubmit;
  final void Function(Event)? onSuspend;
  final void Function(Event)? onTimeUpdate;
  final void Function(TouchEvent)? onTouchCancel;
  final void Function(TouchEvent)? onTouchEnd;
  final void Function(TouchEvent)? onTouchEnter;
  final void Function(TouchEvent)? onTouchLeave;
  final void Function(TouchEvent)? onTouchMove;
  final void Function(TouchEvent)? onTouchStart;
  final void Function(TransitionEvent)? onTransitionEnd;
  final void Function(Event)? onVolumeChange;
  final void Function(Event)? onWaiting;
  final void Function(Event)? onFullscreenChange;
  final void Function(Event)? onFullscreenError;
  final void Function(WheelEvent)? onWheel;

  ElementWidget(
      {this.attributes,
      this.children,
      this.classes,
      this.dataset,
      this.innerHtml,
      this.innerText,
      this.scrollLeft,
      this.scrollTop,
      this.contentEditable,
      this.dir,
      this.draggable,
      this.hidden,
      this.inert,
      this.inputMode,
      this.lang,
      this.spellcheck,
      this.tabIndex,
      this.title,
      this.translate,
      this.className,
      this.id,
      this.slot,
      this.nodes,
      this.text,
      this.onAbort,
      this.onBeforeCopy,
      this.onBeforeCut,
      this.onBeforePaste,
      this.onBlur,
      this.onCanPlay,
      this.onCanPlayThrough,
      this.onChange,
      this.onClick,
      this.onContextMenu,
      this.onCopy,
      this.onCut,
      this.onDoubleClick,
      this.onDrag,
      this.onDragEnd,
      this.onDragEnter,
      this.onDragLeave,
      this.onDragOver,
      this.onDragStart,
      this.onDrop,
      this.onDurationChange,
      this.onEmptied,
      this.onEnded,
      this.onError,
      this.onFocus,
      this.onInput,
      this.onInvalid,
      this.onKeyDown,
      this.onKeyPress,
      this.onKeyUp,
      this.onLoad,
      this.onLoadedData,
      this.onLoadedMetadata,
      this.onMouseDown,
      this.onMouseEnter,
      this.onMouseLeave,
      this.onMouseMove,
      this.onMouseOut,
      this.onMouseOver,
      this.onMouseUp,
      this.onMouseWheel,
      this.onPaste,
      this.onPause,
      this.onPlay,
      this.onPlaying,
      this.onRateChange,
      this.onReset,
      this.onResize,
      this.onScroll,
      this.onSearch,
      this.onSeeked,
      this.onSeeking,
      this.onSelect,
      this.onSelectStart,
      this.onStalled,
      this.onSubmit,
      this.onSuspend,
      this.onTimeUpdate,
      this.onTouchCancel,
      this.onTouchEnd,
      this.onTouchEnter,
      this.onTouchLeave,
      this.onTouchMove,
      this.onTouchStart,
      this.onTransitionEnd,
      this.onVolumeChange,
      this.onWaiting,
      this.onFullscreenChange,
      this.onFullscreenError,
      this.onWheel});

  @override
  Element render() => hook(HtmlElement());

  Element hook(Element v) {
    if (attributes != null) v.attributes = attributes!;
    if (classes != null) v.classes = classes!;
    if (dataset != null) v.dataset = dataset!;
    if (innerHtml != null) v.innerHtml = innerHtml;
    if (innerText != null) v.innerText = innerText!;
    if (scrollLeft != null) v.scrollLeft = scrollLeft!;
    if (scrollTop != null) v.scrollTop = scrollTop!;
    if (contentEditable != null) v.contentEditable = contentEditable!;
    if (dir != null) v.dir = dir;
    if (draggable != null) v.draggable = draggable!;
    if (hidden != null) v.hidden = hidden!;
    if (inert != null) v.inert = inert;
    if (inputMode != null) v.inputMode = inputMode;
    if (lang != null) v.lang = lang;
    if (spellcheck != null) v.spellcheck = spellcheck;
    if (tabIndex != null) v.tabIndex = tabIndex;
    if (title != null) v.title = title;
    if (translate != null) v.translate = translate;
    if (className != null) v.className = className!;
    if (id != null) v.id = id!;
    if (slot != null) v.slot = slot;
    if (nodes != null) v.nodes = nodes!;
    if (text != null) v.text = text;
    if (onAbort != null) v.onAbort.listen(onAbort);
    if (onBeforeCopy != null) v.onBeforeCopy.listen(onBeforeCopy);
    if (onBeforeCut != null) v.onBeforeCut.listen(onBeforeCut);
    if (onBeforePaste != null) v.onBeforePaste.listen(onBeforePaste);
    if (onBlur != null) v.onBlur.listen(onBlur);
    if (onCanPlay != null) v.onCanPlay.listen(onCanPlay);
    if (onCanPlayThrough != null) v.onCanPlayThrough.listen(onCanPlayThrough);
    if (onChange != null) v.onChange.listen(onChange);
    if (onClick != null) v.onClick.listen(onClick);
    if (onContextMenu != null) v.onContextMenu.listen(onContextMenu);
    if (onCopy != null) v.onCopy.listen(onCopy);
    if (onCut != null) v.onCut.listen(onCut);
    if (onDoubleClick != null) v.onDoubleClick.listen(onDoubleClick);
    if (onDrag != null) v.onDrag.listen(onDrag);
    if (onDragEnd != null) v.onDragEnd.listen(onDragEnd);
    if (onDragEnter != null) v.onDragEnter.listen(onDragEnter);
    if (onDragLeave != null) v.onDragLeave.listen(onDragLeave);
    if (onDragOver != null) v.onDragOver.listen(onDragOver);
    if (onDragStart != null) v.onDragStart.listen(onDragStart);
    if (onDrop != null) v.onDrop.listen(onDrop);
    if (onDurationChange != null) v.onDurationChange.listen(onDurationChange);
    if (onEmptied != null) v.onEmptied.listen(onEmptied);
    if (onEnded != null) v.onEnded.listen(onEnded);
    if (onError != null) v.onError.listen(onError);
    if (onFocus != null) v.onFocus.listen(onFocus);
    if (onInput != null) v.onInput.listen(onInput);
    if (onInvalid != null) v.onInvalid.listen(onInvalid);
    if (onKeyDown != null) v.onKeyDown.listen(onKeyDown);
    if (onKeyPress != null) v.onKeyPress.listen(onKeyPress);
    if (onKeyUp != null) v.onKeyUp.listen(onKeyUp);
    if (onLoad != null) v.onLoad.listen(onLoad);
    if (onLoadedData != null) v.onLoadedData.listen(onLoadedData);
    if (onLoadedMetadata != null) v.onLoadedMetadata.listen(onLoadedMetadata);
    if (onMouseDown != null) v.onMouseDown.listen(onMouseDown);
    if (onMouseEnter != null) v.onMouseEnter.listen(onMouseEnter);
    if (onMouseLeave != null) v.onMouseLeave.listen(onMouseLeave);
    if (onMouseMove != null) v.onMouseMove.listen(onMouseMove);
    if (onMouseOut != null) v.onMouseOut.listen(onMouseOut);
    if (onMouseOver != null) v.onMouseOver.listen(onMouseOver);
    if (onMouseUp != null) v.onMouseUp.listen(onMouseUp);
    if (onMouseWheel != null) v.onMouseWheel.listen(onMouseWheel);
    if (onPaste != null) v.onPaste.listen(onPaste);
    if (onPause != null) v.onPause.listen(onPause);
    if (onPlay != null) v.onPlay.listen(onPlay);
    if (onPlaying != null) v.onPlaying.listen(onPlaying);
    if (onRateChange != null) v.onRateChange.listen(onRateChange);
    if (onReset != null) v.onReset.listen(onReset);
    if (onResize != null) v.onResize.listen(onResize);
    if (onScroll != null) v.onScroll.listen(onScroll);
    if (onSearch != null) v.onSearch.listen(onSearch);
    if (onSeeked != null) v.onSeeked.listen(onSeeked);
    if (onSeeking != null) v.onSeeking.listen(onSeeking);
    if (onSelect != null) v.onSelect.listen(onSelect);
    if (onSelectStart != null) v.onSelectStart.listen(onSelectStart);
    if (onStalled != null) v.onStalled.listen(onStalled);
    if (onSubmit != null) v.onSubmit.listen(onSubmit);
    if (onSuspend != null) v.onSuspend.listen(onSuspend);
    if (onTimeUpdate != null) v.onTimeUpdate.listen(onTimeUpdate);
    if (onTouchCancel != null) v.onTouchCancel.listen(onTouchCancel);
    if (onTouchEnd != null) v.onTouchEnd.listen(onTouchEnd);
    if (onTouchEnter != null) v.onTouchEnter.listen(onTouchEnter);
    if (onTouchLeave != null) v.onTouchLeave.listen(onTouchLeave);
    if (onTouchMove != null) v.onTouchMove.listen(onTouchMove);
    if (onTouchStart != null) v.onTouchStart.listen(onTouchStart);
    if (onTransitionEnd != null) v.onTransitionEnd.listen(onTransitionEnd);
    if (onVolumeChange != null) v.onVolumeChange.listen(onVolumeChange);
    if (onWaiting != null) v.onWaiting.listen(onWaiting);
    if (onFullscreenChange != null) {
      v.onFullscreenChange.listen(onFullscreenChange);
    }
    if (onFullscreenError != null) {
      v.onFullscreenError.listen(onFullscreenError);
    }
    if (onWheel != null) v.onWheel.listen(onWheel);

    if (children != null) {
      v.children = children!.map((e) => e.render()).toList();
    }

    return v;
  }
}

class HtmlElementWidget extends ElementWidget {
  String? nonce;

  HtmlElementWidget(
      {this.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element hook(Element el) {
    final v = el as HtmlElement;
    if (nonce != null) v.nonce = nonce;
    return super.hook(v);
  }

  @override
  Element render() => hook(HtmlElement());
}

class AnchorElementWidget extends HtmlElementWidget {
  String? href;
  AnchorElementWidget(
      {this.href,
      super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() {
    final v = AnchorElement();

    if (href != null) v.href = href;
    return hook(v);
  }
}

class AreaElementWidget extends HtmlElementWidget {
  AreaElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(AreaElement());
}

class AudioElementWidget extends HtmlElementWidget {
  AudioElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(AudioElement());
}

class BRElementWidget extends HtmlElementWidget {
  BRElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(BRElement());
}

class BaseElementWidget extends HtmlElementWidget {
  BaseElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(BaseElement());
}

class BodyElementWidget extends HtmlElementWidget {
  BodyElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(BodyElement());
}

class ButtonElementWidget extends HtmlElementWidget {
  ButtonElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(ButtonElement());
}

class CanvasElementWidget extends HtmlElementWidget {
  CanvasElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(CanvasElement());
}

class ContentElementWidget extends HtmlElementWidget {
  ContentElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(ContentElement());
}

class DListElementWidget extends HtmlElementWidget {
  DListElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(DListElement());
}

class DataListElementWidget extends HtmlElementWidget {
  DataListElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(DataListElement());
}

class DetailsElementWidget extends HtmlElementWidget {
  DetailsElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(DetailsElement());
}

class DivElementWidget extends HtmlElementWidget {
  DivElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(DivElement());
}

class EmbedElementWidget extends HtmlElementWidget {
  EmbedElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(EmbedElement());
}

class FieldSetElementWidget extends HtmlElementWidget {
  FieldSetElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(FieldSetElement());
}

class FormElementWidget extends HtmlElementWidget {
  FormElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(FormElement());
}

class HRElementWidget extends HtmlElementWidget {
  HRElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(HRElement());
}

class HeadElementWidget extends HtmlElementWidget {
  HeadElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(HeadElement());
}

class HeadingElementH1Widget extends HtmlElementWidget {
  HeadingElementH1Widget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(HeadingElement.h1());
}

class HeadingElementH2Widget extends HtmlElementWidget {
  HeadingElementH2Widget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(HeadingElement.h2());
}

class HeadingElementH3Widget extends HtmlElementWidget {
  HeadingElementH3Widget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(HeadingElement.h3());
}

class HeadingElementH4Widget extends HtmlElementWidget {
  HeadingElementH4Widget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(HeadingElement.h4());
}

class HeadingElementH5Widget extends HtmlElementWidget {
  HeadingElementH5Widget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(HeadingElement.h5());
}

class HeadingElementH6Widget extends HtmlElementWidget {
  HeadingElementH6Widget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(HeadingElement.h6());
}

class HtmlHtmlElementWidget extends HtmlElementWidget {
  HtmlHtmlElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(HtmlHtmlElement());
}

class IFrameElementWidget extends HtmlElementWidget {
  IFrameElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(IFrameElement());
}

class ImageElementWidget extends HtmlElementWidget {
  ImageElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(ImageElement());
}

class InputElementWidget extends HtmlElementWidget {
  final String? type;
  final String? value;
  final String? placeholder;
  InputElementWidget(
      {this.type,
      this.value,
      this.placeholder,
      super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});

  @override
  Element hook(Element el) {
    final v = el as InputElement;
    if (type != null) v.type = type;
    if (value != null) v.value = value;
    if (placeholder != null) v.placeholder = placeholder!;
    return super.hook(v);
  }

  @override
  Element render() => hook(InputElement());
}

class LIElementWidget extends HtmlElementWidget {
  LIElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(LIElement());
}

class LabelElementWidget extends HtmlElementWidget {
  LabelElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(LabelElement());
}

class LegendElementWidget extends HtmlElementWidget {
  LegendElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(LegendElement());
}

class LinkElementWidget extends HtmlElementWidget {
  LinkElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(LinkElement());
}

class MapElementWidget extends HtmlElementWidget {
  MapElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(MapElement());
}

class MenuElementWidget extends HtmlElementWidget {
  MenuElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(MenuElement());
}

class MetaElementWidget extends HtmlElementWidget {
  MetaElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(MetaElement());
}

class MeterElementWidget extends HtmlElementWidget {
  MeterElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(MeterElement());
}

class OListElementWidget extends HtmlElementWidget {
  OListElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(OListElement());
}

class ObjectElementWidget extends HtmlElementWidget {
  ObjectElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(ObjectElement());
}

class OptGroupElementWidget extends HtmlElementWidget {
  OptGroupElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(OptGroupElement());
}

class OptionElementWidget extends HtmlElementWidget {
  OptionElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(OptionElement());
}

class OutputElementWidget extends HtmlElementWidget {
  OutputElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(OutputElement());
}

class ParagraphElementWidget extends HtmlElementWidget {
  ParagraphElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(ParagraphElement());
}

class PreElementWidget extends HtmlElementWidget {
  PreElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(PreElement());
}

class ProgressElementWidget extends HtmlElementWidget {
  ProgressElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(ProgressElement());
}

class QuoteElementWidget extends HtmlElementWidget {
  QuoteElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(QuoteElement());
}

class ScriptElementWidget extends HtmlElementWidget {
  ScriptElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(ScriptElement());
}

class SelectElementWidget extends HtmlElementWidget {
  SelectElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(SelectElement());
}

class ShadowElementWidget extends HtmlElementWidget {
  ShadowElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(ShadowElement());
}

class SourceElementWidget extends HtmlElementWidget {
  SourceElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(SourceElement());
}

class SpanElementWidget extends HtmlElementWidget {
  SpanElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(SpanElement());
}

class StyleElementWidget extends HtmlElementWidget {
  StyleElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(StyleElement());
}

class TableElementWidget extends HtmlElementWidget {
  TableElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(TableElement());
}

class TableRowElementWidget extends HtmlElementWidget {
  TableRowElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(TableRowElement());
}

class TemplateElementWidget extends HtmlElementWidget {
  TemplateElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(TemplateElement());
}

class TextAreaElementWidget extends HtmlElementWidget {
  TextAreaElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(TextAreaElement());
}

class TitleElementWidget extends HtmlElementWidget {
  TitleElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(TitleElement());
}

class TrackElementWidget extends HtmlElementWidget {
  TrackElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(TrackElement());
}

class UListElementWidget extends HtmlElementWidget {
  UListElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(UListElement());
}

class VideoElementWidget extends HtmlElementWidget {
  VideoElementWidget(
      {super.nonce,
      super.attributes,
      super.children,
      super.classes,
      super.dataset,
      super.innerHtml,
      super.innerText,
      super.scrollLeft,
      super.scrollTop,
      super.contentEditable,
      super.dir,
      super.draggable,
      super.hidden,
      super.inert,
      super.inputMode,
      super.lang,
      super.spellcheck,
      super.tabIndex,
      super.title,
      super.translate,
      super.className,
      super.id,
      super.slot,
      super.nodes,
      super.text,
      super.onAbort,
      super.onBeforeCopy,
      super.onBeforeCut,
      super.onBeforePaste,
      super.onBlur,
      super.onCanPlay,
      super.onCanPlayThrough,
      super.onChange,
      super.onClick,
      super.onContextMenu,
      super.onCopy,
      super.onCut,
      super.onDoubleClick,
      super.onDrag,
      super.onDragEnd,
      super.onDragEnter,
      super.onDragLeave,
      super.onDragOver,
      super.onDragStart,
      super.onDrop,
      super.onDurationChange,
      super.onEmptied,
      super.onEnded,
      super.onError,
      super.onFocus,
      super.onInput,
      super.onInvalid,
      super.onKeyDown,
      super.onKeyPress,
      super.onKeyUp,
      super.onLoad,
      super.onLoadedData,
      super.onLoadedMetadata,
      super.onMouseDown,
      super.onMouseEnter,
      super.onMouseLeave,
      super.onMouseMove,
      super.onMouseOut,
      super.onMouseOver,
      super.onMouseUp,
      super.onMouseWheel,
      super.onPaste,
      super.onPause,
      super.onPlay,
      super.onPlaying,
      super.onRateChange,
      super.onReset,
      super.onResize,
      super.onScroll,
      super.onSearch,
      super.onSeeked,
      super.onSeeking,
      super.onSelect,
      super.onSelectStart,
      super.onStalled,
      super.onSubmit,
      super.onSuspend,
      super.onTimeUpdate,
      super.onTouchCancel,
      super.onTouchEnd,
      super.onTouchEnter,
      super.onTouchLeave,
      super.onTouchMove,
      super.onTouchStart,
      super.onTransitionEnd,
      super.onVolumeChange,
      super.onWaiting,
      super.onFullscreenChange,
      super.onFullscreenError,
      super.onWheel});
  @override
  Element render() => hook(VideoElement());
}
